<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:notification="clr-namespace:Notification.Wpf.Controls;assembly=Notification.Wpf"
                    xmlns:wpf="clr-namespace:Notification.Wpf;assembly=Notification.Wpf"
                    xmlns:constants="clr-namespace:Notification.Wpf.Constants;assembly=Notification.Wpf"
                    xmlns:converters="clr-namespace:Equality.Notifications.Converters"
                    xmlns:catel="http://schemas.catelproject.com"
                    xmlns:helpers="clr-namespace:Notification.Wpf.Sample.Helpers;assembly=Notification.Wpf"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">
    <ControlTemplate x:Key="Notification:Template"
                     TargetType="{x:Type notification:Notification}">
        <ControlTemplate.Resources>
            <!-- Base buttons -->
            <ControlTemplate x:Key="Notification:OverButtonControlTemplate"
                             TargetType="{x:Type ButtonBase}">
                <Border x:Name="TemplateBorder"
                        Background="Transparent"
                        RenderTransformOrigin="0.5,0.5"
                        BorderBrush="#EEE"
                        BorderThickness="{TemplateBinding BorderThickness}">
                    <ContentPresenter VerticalAlignment="Center"
                                      HorizontalAlignment="Center" />
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsEnabled"
                             Value="False">
                        <Setter Property="Foreground"
                                Value="DarkGray" />
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsMouseOver"
                                       Value="True" />
                            <Condition Property="IsEnabled"
                                       Value="True" />
                        </MultiTrigger.Conditions>
                        <Setter Property="Effect">
                            <Setter.Value>
                                <DropShadowEffect />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="RenderTransform"
                                TargetName="TemplateBorder">
                            <Setter.Value>
                                <ScaleTransform ScaleX="1.1"
                                                ScaleY="1.1" />
                            </Setter.Value>
                        </Setter>
                    </MultiTrigger>
                    <Trigger Property="IsPressed"
                             Value="True">
                        <Setter Property="RenderTransform"
                                TargetName="TemplateBorder">
                            <Setter.Value>
                                <ScaleTransform ScaleX="0.9"
                                                ScaleY="0.9" />
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <Style TargetType="ButtonBase"
                   x:Key="Notification:OverButton">
                <Setter Property="Margin"
                        Value="2" />
                <Setter Property="BorderThickness"
                        Value="0" />
                <Setter Property="FontFamily"
                        Value="Tahoma" />
                <Setter Property="Template"
                        Value="{StaticResource Notification:OverButtonControlTemplate}" />
            </Style>

            <!-- Close button -->
            <Style TargetType="Button"
                   x:Key="Notification:CloseButtonStyle"
                   BasedOn="{StaticResource Notification:OverButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <materialDesign:PackIcon Kind="Close" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="HorizontalAlignment"
                        Value="Right" />
                <Setter Property="VerticalAlignment"
                        Value="Top" />
            </Style>

            <!-- Button in notification -->
            <Style TargetType="Button"
                   x:Key="Notification:NotifyButton">
                <Setter Property="Foreground"
                        Value="White" />
                <Setter Property="Background"
                        Value="#22FFFFFF" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Label Content="{TemplateBinding Content}"
                                   Foreground="{TemplateBinding Foreground}"
                                   Background="{TemplateBinding Background}"
                                   HorizontalContentAlignment="Center"
                                   MinWidth="80"
                                   MaxWidth="120" />
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Setter Property="Background"
                                            Value="#11FFFFFF" />
                                </Trigger>
                                <Trigger Property="IsPressed"
                                         Value="True">
                                    <Setter Property="Background"
                                            Value="#11000000" />
                                    <Setter Property="Foreground"
                                            Value="#FFAAAAAA" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Attach button when text is trimmed -->
            <Viewbox x:Key="Notification:AttachIcon"
                     Height="25">
                <Path Data="M43.246 466.142c-58.43-60.289-57.341-157.511 1.386-217.581L254.392 34c44.316-45.332 116.351-45.336 160.671 0 43.89 44.894 43.943 117.329 0 162.276L232.214 383.128c-29.855 30.537-78.633 30.111-107.982-.998-28.275-29.97-27.368-77.473 1.452-106.953l143.743-146.835c6.182-6.314 16.312-6.422 22.626-.241l22.861 22.379c6.315 6.182 6.422 16.312.241 22.626L171.427 319.927c-4.932 5.045-5.236 13.428-.648 18.292 4.372 4.634 11.245 4.711 15.688.165l182.849-186.851c19.613-20.062 19.613-52.725-.011-72.798-19.189-19.627-49.957-19.637-69.154 0L90.39 293.295c-34.763 35.56-35.299 93.12-1.191 128.313 34.01 35.093 88.985 35.137 123.058.286l172.06-175.999c6.177-6.319 16.307-6.433 22.626-.256l22.877 22.364c6.319 6.177 6.434 16.307.256 22.626l-172.06 175.998c-59.576 60.938-155.943 60.216-214.77-.485z"
                      Fill="White">
                    <Path.Triggers>
                        <EventTrigger RoutedEvent="Path.Loaded">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
                                                                      RepeatBehavior="10x"
                                                                      AutoReverse="True">
                                            <LinearColorKeyFrame KeyTime="0:0:0">
                                                <LinearColorKeyFrame.Value>
                                                    <Color A="255"
                                                           R="255"
                                                           G="255"
                                                           B="255" />
                                                </LinearColorKeyFrame.Value>
                                            </LinearColorKeyFrame>
                                            <LinearColorKeyFrame KeyTime="0:0:1">
                                                <LinearColorKeyFrame.Value>
                                                    <Color A="255"
                                                           R="0"
                                                           G="0"
                                                           B="0" />
                                                </LinearColorKeyFrame.Value>
                                            </LinearColorKeyFrame>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </Path.Triggers>
                </Path>
            </Viewbox>

            <DataTemplate DataType="{x:Type system:String}"
                          x:Key="DefaultStringTemplate">
                <Border Background="{Binding RelativeSource={RelativeSource AncestorType=notification:Notification}, Path=Background}">
                    <TextBlock HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Text="{Binding}" />
                </Border>
            </DataTemplate>

            <DataTemplate DataType="{x:Type ImageSource}"
                          x:Key="DefaultImageSourceTemplate">
                <Border Background="{Binding RelativeSource={RelativeSource AncestorType=notification:Notification}, Path=Background}">
                    <Image Source="{Binding}" />
                </Border>
            </DataTemplate>

            <DataTemplate DataType="{x:Type wpf:NotificationContent}"
                          x:Key="DefaultNotificationTemplate">
                <Border x:Name="Border"
                        Padding="12">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <Image Grid.Row="{Binding Image.Position , Converter={converters:ImagePositionGridRowConverter}}"
                               Grid.Column="0"
                               Grid.ColumnSpan="2"
                               Visibility="{Binding Image.Position, Converter={converters:ImagePositionToVisibilityConverter}}"
                               Source="{Binding Image.Source}"
                               Margin="{Binding Image.Position, Converter={converters:ImagePositionMarginConverter}}" />

                        <ContentControl Grid.Row="1"
                                        Grid.Column="0"
                                        Margin="0,0,12,0"
                                        Width="25"
                                        VerticalAlignment="Stretch">
                            <DockPanel x:Name="LeftPanel">

                                <ContentControl DockPanel.Dock="Top"
                                                x:Name="Icon"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Top">
                                    <ContentControl.Resources>
                                        <DataTemplate DataType="{x:Type ImageSource}">
                                            <Image Source="{Binding }" />
                                        </DataTemplate>
                                    </ContentControl.Resources>
                                </ContentControl>

                                <Button x:Name="Attach"
                                        DockPanel.Dock="Bottom"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Bottom"
                                        Style="{StaticResource Notification:OverButton}"
                                        Visibility="Visible"
                                        notification:Notification.CloseOnClick="True"
                                        notification:Notification.AttachOnClick="{Binding}">
                                    <ContentControl x:Name="AttachIcon"
                                                    DockPanel.Dock="Bottom"
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    Content="{StaticResource Notification:AttachIcon}" />
                                </Button>
                            </DockPanel>
                            <ContentControl.Style>
                                <Style TargetType="{x:Type ContentControl}">
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Icon, TargetNullValue=true}"
                                                           Value="true" />
                                                <Condition Binding="{Binding Type}"
                                                           Value="None" />
                                                <Condition Binding="{Binding Visibility, ElementName=Attach}"
                                                           Value="Collapsed" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Visibility"
                                                    Value="Collapsed" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ContentControl.Style>

                        </ContentControl>

                        <DockPanel Grid.Column="1"
                                   Grid.Row="1">
                            <TextBlock x:Name="TitleTxt"
                                       DockPanel.Dock="Top"
                                       Text="{Binding Title}"
                                       TextTrimming="CharacterEllipsis"
                                       Margin="0,0,15,0"
                                       Visibility="{Binding Title, Converter={catel:EmptyStringToCollapsingVisibilityConverter}}" />

                            <DockPanel LastChildFill="False"
                                       DockPanel.Dock="Bottom"
                                       Margin="0,8,0,0">
                                <Button x:Name="RightButton"
                                        Style="{StaticResource Notification:NotifyButton}"
                                        Command="{Binding RightButtonAction, Converter={converters:ActionToCommandConverter}}"
                                        Content="{Binding RightButtonContent}"
                                        DockPanel.Dock="Right"
                                        notification:Notification.CloseOnClick="True"
                                        Visibility="{Binding RightButtonAction, Converter={catel:ReferenceToCollapsingVisibilityConverter}}" />

                                <Button x:Name="LeftButton"
                                        Style="{StaticResource Notification:NotifyButton}"
                                        Command="{Binding LeftButtonAction, Converter={converters:ActionToCommandConverter}}"
                                        Content="{Binding LeftButtonContent}"
                                        DockPanel.Dock="Right"
                                        Margin="0,0,8,0"
                                        notification:Notification.CloseOnClick="True"
                                        Visibility="{Binding LeftButtonAction, Converter={catel:ReferenceToCollapsingVisibilityConverter}}" />
                            </DockPanel>

                            <TextBlock x:Name="MessageBox"
                                       Text="{Binding Message}"
                                       TextWrapping="Wrap"
                                       Opacity=".8"
                                       Margin="0,0,5,0"
                                       Visibility="{Binding Message, Converter={catel:EmptyStringToCollapsingVisibilityConverter}}" />

                        </DockPanel>
                    </Grid>
                </Border>

                <!-- Settings and types -->
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding TrimType}"
                                 Value="Attach">
                        <Setter TargetName="Attach"
                                Property="Visibility"
                                Value="Visible" />
                        <Setter TargetName="MessageBox"
                                Property="TextTrimming"
                                Value="CharacterEllipsis" />
                        <Setter TargetName="MessageBox"
                                Property="LineStackingStrategy"
                                Value="BlockLineHeight" />
                        <Setter TargetName="MessageBox"
                                Property="helpers:NotificationLineHeightBehavior.Lines"
                                Value="{Binding RowsCount}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding TrimType}"
                                 Value="AttachIfMoreRows">
                        <Setter TargetName="Attach"
                                Property="Visibility"
                                Value="{Binding Converter={converters:NotificationAttachVisibleConverter}}" />
                        <Setter TargetName="MessageBox"
                                Property="TextTrimming"
                                Value="CharacterEllipsis" />
                        <Setter TargetName="MessageBox"
                                Property="LineStackingStrategy"
                                Value="BlockLineHeight" />
                        <Setter TargetName="MessageBox"
                                Property="helpers:NotificationLineHeightBehavior.Lines"
                                Value="{Binding RowsCount}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding TrimType}"
                                 Value="Trim">
                        <Setter TargetName="Attach"
                                Property="Visibility"
                                Value="Collapsed" />
                        <Setter TargetName="MessageBox"
                                Property="TextTrimming"
                                Value="CharacterEllipsis" />
                        <Setter TargetName="MessageBox"
                                Property="LineStackingStrategy"
                                Value="BlockLineHeight" />
                        <Setter TargetName="MessageBox"
                                Property="helpers:NotificationLineHeightBehavior.Lines"
                                Value="{Binding RowsCount}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding TrimType}"
                                 Value="NoTrim">
                        <Setter TargetName="Attach"
                                Property="Visibility"
                                Value="Collapsed" />
                        <Setter TargetName="MessageBox"
                                Property="TextTrimming"
                                Value="None" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Type}"
                                 Value="Notification">
                        <Setter TargetName="Icon"
                                Property="Content">
                            <Setter.Value>
                                <materialDesign:PackIcon Height="25"
                                                         Width="25"
                                                         Kind="Information" />
                            </Setter.Value>
                        </Setter>
                        <Setter TargetName="Border"
                                Property="Background"
                                Value="{Binding Source={x:Static constants:NotificationConstants.DefaultBackgroundColor}}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Type}"
                                 Value="Information">
                        <Setter TargetName="Icon"
                                Property="Content">
                            <Setter.Value>
                                <materialDesign:PackIcon Height="25"
                                                         Width="25"
                                                         Kind="Information" />
                            </Setter.Value>
                        </Setter>
                        <Setter TargetName="Border"
                                Property="Background"
                                Value="{Binding Source={x:Static constants:NotificationConstants.InformationBackgroundColor}}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Type}"
                                 Value="Success">
                        <Setter TargetName="Icon"
                                Property="Content">
                            <Setter.Value>
                                <materialDesign:PackIcon Height="25"
                                                         Width="25"
                                                         Kind="Check" />
                            </Setter.Value>
                        </Setter>
                        <Setter TargetName="Border"
                                Property="Background"
                                Value="{Binding Source={x:Static constants:NotificationConstants.SuccessBackgroundColor}}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Type}"
                                 Value="Warning">
                        <Setter TargetName="Icon"
                                Property="Content">
                            <Setter.Value>
                                <materialDesign:PackIcon Height="25"
                                                         Width="25"
                                                         Kind="Warning" />
                            </Setter.Value>
                        </Setter>
                        <Setter TargetName="Border"
                                Property="Background"
                                Value="{Binding Source={x:Static constants:NotificationConstants.WarningBackgroundColor}}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Type}"
                                 Value="Error">
                        <Setter TargetName="Icon"
                                Property="Content">
                            <Setter.Value>
                                <materialDesign:PackIcon Height="25"
                                                         Width="25"
                                                         Kind="Error" />
                            </Setter.Value>
                        </Setter>
                        <Setter TargetName="Border"
                                Property="Background"
                                Value="{Binding Source={x:Static constants:NotificationConstants.ErrorBackgroundColor}}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Icon, TargetNullValue=true}"
                                 Value="false">
                        <Setter TargetName="Icon"
                                Property="Content"
                                Value="{Binding Icon}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Background, TargetNullValue=true}"
                                 Value="false">
                        <Setter TargetName="Border"
                                Property="Background"
                                Value="{Binding Background}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Foreground, TargetNullValue=true}"
                                 Value="false">
                        <Setter TargetName="TitleTxt"
                                Property="Foreground"
                                Value="{Binding Foreground}" />
                        <Setter TargetName="MessageBox"
                                Property="Foreground"
                                Value="{Binding Foreground}" />
                        <Setter TargetName="LeftButton"
                                Property="Foreground"
                                Value="{Binding Foreground}" />
                        <Setter TargetName="RightButton"
                                Property="Foreground"
                                Value="{Binding Foreground}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding TitleTextSettings, TargetNullValue=true}"
                                 Value="false">
                        <Setter TargetName="TitleTxt"
                                Property="FontFamily"
                                Value="{Binding TitleTextSettings.FontFamily}" />
                        <Setter TargetName="TitleTxt"
                                Property="FontSize"
                                Value="{Binding TitleTextSettings.FontSize}" />
                        <Setter TargetName="TitleTxt"
                                Property="TextAlignment"
                                Value="{Binding TitleTextSettings.TextAlignment}" />
                        <Setter TargetName="TitleTxt"
                                Property="HorizontalAlignment"
                                Value="{Binding TitleTextSettings.HorizontalAlignment}" />
                        <Setter TargetName="TitleTxt"
                                Property="VerticalAlignment"
                                Value="{Binding TitleTextSettings.VerticalTextAlignment}" />
                        <Setter TargetName="TitleTxt"
                                Property="FontStyle"
                                Value="{Binding TitleTextSettings.FontStyle}" />
                        <Setter TargetName="TitleTxt"
                                Property="FontWeight"
                                Value="{Binding TitleTextSettings.FontWeight}" />
                        <Setter TargetName="TitleTxt"
                                Property="Opacity"
                                Value="{Binding TitleTextSettings.Opacity}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding MessageTextSettings, TargetNullValue=true}"
                                 Value="false">
                        <Setter TargetName="MessageBox"
                                Property="FontFamily"
                                Value="{Binding MessageTextSettings.FontFamily}" />
                        <Setter TargetName="MessageBox"
                                Property="FontSize"
                                Value="{Binding MessageTextSettings.FontSize}" />
                        <Setter TargetName="MessageBox"
                                Property="TextAlignment"
                                Value="{Binding MessageTextSettings.TextAlignment}" />
                        <Setter TargetName="MessageBox"
                                Property="HorizontalAlignment"
                                Value="{Binding MessageTextSettings.HorizontalAlignment}" />
                        <Setter TargetName="MessageBox"
                                Property="VerticalAlignment"
                                Value="{Binding MessageTextSettings.VerticalTextAlignment}" />
                        <Setter TargetName="MessageBox"
                                Property="FontStyle"
                                Value="{Binding MessageTextSettings.FontStyle}" />
                        <Setter TargetName="MessageBox"
                                Property="FontWeight"
                                Value="{Binding MessageTextSettings.FontWeight}" />
                        <Setter TargetName="MessageBox"
                                Property="Opacity"
                                Value="{Binding MessageTextSettings.Opacity}" />
                    </DataTrigger>

                </DataTemplate.Triggers>
            </DataTemplate>
        </ControlTemplate.Resources>

        <!-- Close button -->
        <Border Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Margin="8,8,0,0">
            <Grid>
                <ContentPresenter />
                <Button x:Name="PART_CloseButton"
                        Margin="12"
                        Style="{StaticResource Notification:CloseButtonStyle}"
                        Foreground="{TemplateBinding Foreground}"
                        Opacity=".8"
                        Visibility="{Binding XbtnVisibility, RelativeSource={RelativeSource AncestorType={x:Type notification:Notification}}}" />
            </Grid>
        </Border>

        <!-- Animations -->
        <ControlTemplate.Triggers>
            <EventTrigger RoutedEvent="Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                         From="0"
                                         To="1"
                                         Duration="0:0:.5" />
                        <DoubleAnimation Storyboard.TargetProperty="LayoutTransform.ScaleX"
                                         From="0"
                                         To="1"
                                         Duration="0:0:.2" />
                        <DoubleAnimation Storyboard.TargetProperty="LayoutTransform.ScaleY"
                                         From="0"
                                         To="1"
                                         Duration="0:0:.2" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="notification:Notification.NotificationCloseInvoked">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                         From="1"
                                         To="0"
                                         Duration="0:0:.5" />
                        <DoubleAnimation Storyboard.TargetProperty="LayoutTransform.ScaleX"
                                         From="1"
                                         To="0"
                                         Duration="0:0:.2" />
                        <DoubleAnimation Storyboard.TargetProperty="LayoutTransform.ScaleY"
                                         From="1"
                                         To="0"
                                         Duration="0:0:.2" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <wpf:NotificationTemplateSelector x:Key="Notification:TemplateSelector" />

    <Style TargetType="{x:Type notification:Notification}">
        <Setter Property="UseLayoutRounding"
                Value="True" />
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="FontSize"
                Value="14" />
        <Setter Property="Background"
                Value="#444444" />
        <Setter Property="Foreground"
                Value="White" />
        <Setter Property="Template"
                Value="{StaticResource Notification:Template}" />
        <Setter Property="ContentTemplateSelector"
                Value="{StaticResource Notification:TemplateSelector}" />
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform />
            </Setter.Value>
        </Setter>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="5"
                                  Direction="0"
                                  ShadowDepth="0"
                                  Opacity=".25" />
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>